{"version":3,"sources":["actions/actions.js","reducers/reducers.js","components/visibility-filter-input/visibility-filter-input.jsx","components/movie-card/movie-card.jsx","components/movies-list/movies-list.jsx","components/login-view/login-view.jsx","components/registration-view/registration-view.jsx","components/movie-view/movie-view.jsx","components/director-view/director-view.jsx","components/genre-view/genre-view.jsx","components/profile-view/profile-view.jsx","components/main-view/main-view.jsx","App.js","serviceWorker.js","index.js"],"names":["SET_MOVIES","SET_FILTER","SET_SORT_COLUMN","SET_LOGGEDIN_USER","moviesApp","combineReducers","visibilityFilter","state","action","type","value","sortColumn","movies","loggedInUser","connect","setFilter","setSortColumn","props","Control","className","onChange","event","target","placeholder","as","MovieCard","movie","this","style","width","Img","variant","src","ImagePath","Body","Title","Text","Description","to","_id","React","Component","moviesToShow","concat","sort","a","b","filter","toLowerCase","includes","Genre","Name","Director","map","key","xs","sm","md","LoginView","useState","username","setUsername","password","setPassword","Group","controlId","Label","e","onClick","preventDefault","axios","post","Username","Password","then","response","data","onLoggedIn","catch","alert","RegistrationView","email","setEmail","birthday","setBirthday","size","Email","Birthday","console","log","window","open","movieId","length","find","alt","put","localStorage","getItem","headers","Authorization","handleSubmit","directorName","director","Bio","Birth","Death","genreName","genre","ProfileView","favoriteMovies","usernameForm","passwordForm","emailForm","birthdayForm","accessToken","getUser","token","get","setState","userData","FavoriteMovies","error","delete","removeItem","favoriteMovie","name","setItem","form","document","getElementsByClassName","toggleButton","getElementById","classList","toggle","contains","innerHTML","substr","JSON","parse","deleteMovie","deleteUser","id","toggleForm","handleChange","MainView","user","getMovies","setMovies","stringify","setLoggedInUser","authData","logOut","exact","path","render","match","params","UserRegistered","store","createStore","App","Boolean","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24b4c7da.chunk.js","sourcesContent":["export const SET_MOVIES = 'SET_MOVIES';\nexport const SET_FILTER = 'SET_FILTER';\nexport const SET_SORT_COLUMN = 'SET_SORT_COLUMN';\nexport const SET_LOGGEDIN_USER = 'SET_LOGGEDIN_USER';\n\n\n export function setMovies(value) {\n  return { type: SET_MOVIES, value };\n}\n\n export function setFilter(value) {\n  return { type: SET_FILTER, value };\n}\n\n export function setSortColumn(value) {\n  return { type: SET_SORT_COLUMN, value };\n}\n\nexport function setLoggedInUser(value) {\n  return { type: SET_LOGGEDIN_USER, value }\n}\n","import { combineReducers } from 'redux';\nimport { SET_MOVIES, SET_FILTER, SET_SORT_COLUMN, SET_LOGGEDIN_USER } from '../actions/actions.js';\n\n\n\n function visibilityFilter(state = '', action) {\n  switch (action.type) {\n    case SET_FILTER:\n      return action.value;\n    default:\n      return state;\n  }\n}\n\n function sortColumn(state = 'Title', action) {\n  switch (action.type) {\n    case SET_SORT_COLUMN:\n      return action.value;\n    default:\n      return state;\n  }\n}\n\n function movies(state = [], action) {\n  switch (action.type) {\n    case SET_MOVIES:\n      return action.value;\n    default:\n      return state;\n  }\n}\n\nfunction loggedInUser(state = [], action) {\n  switch (action.type) {\n    case SET_LOGGEDIN_USER:\n      return action.value;\n    default:\n      return state;\n  }\n}\n\n\nconst moviesApp = combineReducers({\n visibilityFilter,\n sortColumn,\n movies,\n loggedInUser\n});\n\n\n export default moviesApp;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Form from 'react-bootstrap/Form';\n\nimport { setFilter } from '../../actions/actions';\nimport { setSortColumn } from '../../actions/actions';\n\nimport './visibility-filter-input.scss';\n\n\nfunction VisibilityFilterInput(props) {\n  return<Form>\n    <Form.Control\n    className=\"visibilityFilterForm\"\n    onChange={event => props.setFilter(event.target.value)}\n    value={props.visibilityFilter}\n    placeholder='filter movies'\n  />\n  <Form.Control\n    as=\"select\"\n    className=\"selectFilter\"\n    onChange={event => props.setSortColumn(event.target.value)}\n    value={props.sortColumn}\n  >\n      <option>Title</option>\n      <option>Genre</option>\n      <option>Director</option>\n    </Form.Control>\n  </Form>\n}\n\nexport default connect(\n  ({visibilityFilter, sortColumn}) => ({visibilityFilter, sortColumn}),\n  { setFilter, setSortColumn }\n)(VisibilityFilterInput);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Link } from 'react-router-dom';\r\nimport './movie-card.scss';\r\n\r\n\r\nexport class MovieCard extends React.Component {\r\n  render() {\r\n\r\n    const { movie } = this.props;\r\n\r\n    return (\r\n      <Card style={{ width: '16rem' }}>\r\n      <Card.Img variant=\"top\" src={movie.ImagePath} />\r\n        <Card.Body>\r\n          <Card.Title>{movie.Title}</Card.Title>\r\n          <Card.Text>{movie.Description}</Card.Text>\r\n          <Link to={`/movies/${movie._id}`}>\r\n            <Button variant=\"primary\" className=\"btn btn-dark\">More</Button>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nMovieCard.propTypes = {\r\n    movie: PropTypes.shape({\r\n        Title: PropTypes.string,\r\n        ImagePath: PropTypes.string,\r\n        Description: PropTypes.string\r\n    }).isRequired\r\n};\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nimport VisibilityFilterInput from '../visibility-filter-input/visibility-filter-input';\n\nimport { MovieCard } from '../movie-card/movie-card';\n\nconst mapStateToProps = state => {\n  const { movies, visibilityFilter, sortColumn } = state;\n  let  moviesToShow = movies.concat().sort((a, b) => {\n    if (a[sortColumn] < b[sortColumn]) return -1;\n    if (a[sortColumn] > b[sortColumn]) return 1;\n    return 0\n  });\n\n  if (visibilityFilter !== '' && sortColumn === 'Title') {\n    moviesToShow = moviesToShow.filter(movie => movie.Title.toLowerCase().includes(visibilityFilter.toLowerCase()));\n  }\n\n  if (visibilityFilter !== '' && sortColumn === 'Genre') {\n    moviesToShow = moviesToShow.filter(movie => movie.Genre.Name.toLowerCase().includes(visibilityFilter.toLowerCase()));\n  }\n\n  if (visibilityFilter !== '' && sortColumn === 'Director') {\n    moviesToShow = moviesToShow.filter(movie => movie.Director.Name.toLowerCase().includes(visibilityFilter.toLowerCase()));\n  }\n\n  return { movies: moviesToShow };};\n\n\nfunction MoviesList(props) {\n  const { movies } = props;\n\n  if (!movies) return <div className=\"main-view\" />;\n\n  return <div className=\"movie-list\">\n  <VisibilityFilterInput />\n    <Container>\n      <Row>\n      {movies.map(movie => (\n        <Col key={movie._id} xs={12} sm={6} md={4}>\n          <MovieCard key={movie._id} movie={movie} />\n        </Col>\n      ))\n      }\n      </Row>\n  </Container>\n      </div>\n}\n\nexport default connect(mapStateToProps)(MoviesList);\n","import React, { useState } from 'react';//useState hook for less redundancy\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport './login-view.scss';\r\n\r\nexport function LoginView(props) {\r\n  const [ username, setUsername ] = useState('');\r\n  const [ password, setPassword ] = useState('');\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    axios.post('https://myflixapp.herokuapp.com/login', {\r\n      Username: username,\r\n      Password: password\r\n  })\r\n  .then(response => {\r\n    const data = response.data;\r\n    props.onLoggedIn(data);\r\n  })\r\n  .catch(e => {\r\n    alert('no such user')\r\n  });\r\n};\r\n\r\n  return (\r\n      <Container className='login-view'>\r\n        <h1>Welcome to MyFlix! </h1>\r\n        <Form>\r\n\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label >Username</Form.Label>\r\n          <Form.Control type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Enter Username\" />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Enter Password\" />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"button\" className=\"btn btn-dark\" onClick={handleLogin}>\r\n        LOGIN\r\n        </Button>\r\n        <p>Not a member, Signup\r\n          <Link to={'/register'}>\r\n            <span> here</span>\r\n          </Link>\r\n        </p>\r\n        </Form>\r\n      </Container>\r\n  );\r\n}\r\n\r\nLoginView.propTypes = {\r\n  onLoggedIn: PropTypes.func.isRequired\r\n};\r\n","import React, { useState } from 'react';//useState hook used for lesser redundancy\r\nimport axios from 'axios';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Link } from 'react-router-dom';\r\nimport './registration-view.scss';\r\n\r\nexport function RegistrationView(props) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [birthday, setBirthday] = useState('');\r\n\r\n    const SuccessfulRegistration = (e) => {\r\n      e.preventDefault();\r\n      axios.post('https://myflixapp.herokuapp.com/users', {\r\n       Username: username,\r\n       Password: password,\r\n       Email: email,\r\n       Birthday: birthday\r\n     })\r\n     .then(response => {\r\n       const data = response.data;\r\n       console.log(data);\r\n       window.open('/', '_self');\r\n     })\r\n     .catch(event => {\r\n       console.log('error registering the user')\r\n     });\r\n   };\r\n\r\n    return (\r\n      <Container className='registration-view'>\r\n        <h1>Register</h1>\r\n            <Form>\r\n                <Form.Group controlId='formNewUsername'>\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control size='sm' type='text' placeholder='Enter username' value={username} onChange={e => setUsername(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId='formNewPassword'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control size='sm' type='password' placeholder='Enter password' value={password} onChange={e => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId='formNewEmail'>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control size='sm' type='email' placeholder='example@gmail.com' value={email} onChange={e => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId='formNewBirthday'>\r\n                    <Form.Label>Birthday</Form.Label>\r\n                    <Form.Control size='sm' type='date' placeholder='MM/DD/YYYY' value={birthday} onChange={e => setBirthday(e.target.value)} />\r\n                </Form.Group>\r\n                <Button variant='dark' onClick={SuccessfulRegistration}>Register</Button>\r\n                <p>\r\n                  Already a member?\r\n                  <Link to={'/'}>\r\n                    <span>Login</span>\r\n                  </Link>\r\n                </p>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './movie-view.scss';\timport './movie-view.scss';\r\n\r\nfunction MovieView(props) {\r\n  const { movies, movieId } = props;\r\n\r\n    if (!movies || !movies.length) return null;\r\n\r\n    const movie = movies.find(movie => movie._id === movieId);\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n      axios.put(`https://myflixapp.herokuapp.com/users/${localStorage.getItem('user')}/movies/${movie._id}`, {\r\n        Username: localStorage.getItem('user')\r\n      }, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}`}\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n        alert('Movie has been added to your Favorite List!');\r\n      })\r\n      .catch(event => {\r\n        console.log('Error adding movie to list');\r\n        alert('Something went wrong!');\r\n      });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n      //<Container className=\"movie-view\">\r\n      <div className=\"movie-view\">\r\n        <div className=\"movie-title\">\r\n          <h1>{movie.Title}</h1>\r\n        </div>\r\n        <img className=\"movie-poster\" src={movie.ImagePath} alt=\"movie cover\" />\r\n        <div className=\"movie-description\">\r\n          <h4 className=\"label\">Description</h4>\r\n          <div className=\"value\">{movie.Description}</div>\r\n        </div>\r\n        <div className=\"movie-genre\">\r\n          <h4 className=\"label\">Genre</h4>\r\n          <div className=\"value\">{movie.Genre.Name}</div>\r\n        </div>\r\n        <div className=\"movie-director\">\r\n          <h4 className=\"label\">Director</h4>\r\n          <div className=\"value\">{movie.Director.Name}</div>\r\n        </div>\r\n          <Link to={'/'}>\r\n            <Button className=\"view-btn\" variant=\"dark\" type=\"button\">\r\n                    Go Back\r\n            </Button>\r\n          </Link>\r\n          <Link to={`/genres/${movie.Genre.Name}`}>\r\n            <Button className=\"view-btn\" variant=\"dark\" type=\"button\">\r\n            Genre\r\n            </Button>\r\n          </Link>\r\n          <Link to={`/directors/${movie.Director.Name}`}>\r\n            <Button className=\"view-btn\" variant=\"dark\" type=\"button\">\r\n            Director\r\n            </Button>\r\n          </Link>\r\n          <Button className=\"view-btn\" variant=\"success\" type=\"button\" onClick={event => handleSubmit(event)}>\r\n            Add to favorites\r\n          </Button>\r\n          </div>\r\n        //</Container>\r\n    );\r\n  }\r\n\r\nexport default connect(({movies}) => ({movies}))(MovieView);\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\n\nimport { Link } from 'react-router-dom';\n\nimport './director-view.scss';\n\n\nfunction DirectorView(props) {\n  const { movies, directorName } = props;\n\n  if (!movies || !movies.length) return null;\n\n  const director = movies.find(movie => movie.Director.Name === directorName).Director;\n\n  return (\n    <div className=\"director-view\">\n      <h1 className=\"director\">{director.Name}</h1>\n      <h2>Biography</h2>\n      <div className=\"bio\">{director.Bio}</div>\n      <h2>Born</h2>\n      <div className=\"birth\">{director.Birth}</div>\n      <h2>Died</h2>\n      <div className=\"death\">{director.Death}</div>\n      <Link to={'/'}>\n        <Button variant=\"dark\" type=\"button\">\n        BACK\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\n\nexport default connect(({movies}) => ({movies}))(DirectorView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\n\nimport { Link } from 'react-router-dom';\n\nimport './genre-view.scss';\n\n\n\n\n  function GenreView(props) {\n    const { movies, genreName } = props;\n\n    if (!movies || !movies.length) return null;\n\n    const genre = movies.find(movie => movie.Genre.Name === genreName).Genre;\n\n    return (\n      <div className=\"genre-view\">\n        <h1 className=\"genre\">{genre.Name}</h1>\n        <div className=\"description\">{genre.Description}</div>\n        <Link to={'/'}>\n          <Button variant=\"dark\" type=\"button\">\n          BACK\n          </Button>\n        </Link>\n      </div>\n    );\n}\n\n\nexport default connect(({movies}) => ({movies}))(GenreView);\n","import React from 'react';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\n\nimport { Link } from 'react-router-dom';\n\nimport './profile-view.scss';\n\n\nexport class ProfileView extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: null,\n      password: null,\n      email: null,\n      birthday: null,\n      favoriteMovies: [],\n      usernameForm: null,\n      passwordForm: null,\n      emailForm: null,\n      birthdayForm: null\n    };\n  }\n\n  componentDidMount() {\n      //authentication\n      let accessToken = localStorage.getItem('token');\n      if (accessToken !== null) {\n        this.getUser(accessToken);\n      }\n    }\n\n    //get user\n      getUser(token) {\n        let username = localStorage.getItem('user');\n        axios.get(`https://myflixapp.herokuapp.com/users/${username}`, {\n          headers: { Authorization: `Bearer ${token}`}\n        })\n        .then(response => {\n          this.setState({\n            userData: response.data,\n            username: response.data.Username,\n            password: response.data.Password,\n            email: response.data.Email,\n            birthday: response.data.Birthday,\n            favoriteMovies: response.data.FavoriteMovies\n          });\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      }\n\n  deleteUser(event) {\n    event.preventDefault();\n    axios.delete(`https://myflixapp.herokuapp.com/users/${localStorage.getItem('user')}`, {\n      headers: { Authorization: `Bearer ${localStorage.getItem('token')}`}\n    })\n    .then(response => {\n      alert('Your Account has been deleted!');\n      //clears storage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      //opens login view\n      window.open('/', '_self');\n    })\n    .catch(event => {\n      alert('failed to delete user');\n    });\n  }\n\n  // delete movie from list\n    deleteMovie(event, favoriteMovie) {\n      event.preventDefault();\n      console.log(favoriteMovie);\n      axios.delete(`https://myflixapp.herokuapp.com/users/${localStorage.getItem('user')}/movies/${favoriteMovie}`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}`}\n      })\n      .then(response => {\n        alert('Movie has been removed from list!');\n      })\n      .catch(event => {\n        alert('Something went wrong...');\n      });\n\n    }\n\n  //handle the changes\n    handleChange(event) {\n      this.setState( {[event.target.name]: event.target.value} )\n    }\n\n    //update user data\n    handleSubmit(event) {\n      event.preventDefault();\n      console.log(this.state.username);\n      axios.put(`https://myflixapp.herokuapp.com/users/${localStorage.getItem('user')}`, {\n        Username: this.state.usernameForm,\n        Password: this.state.passwordForm,\n        Email: this.state.emailForm,\n        Birthday: this.state.birthdayForm\n      }, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}`}\n      })\n      .then(response => {\n        console.log(response);\n        alert('Your data has been updated!');\n        //update localStorage\n        localStorage.setItem('user', this.state.username);\n      })\n      .catch(event => {\n        console.log('Error updating the userdata');\n        alert('Something went wrong!');\n      });\n    };\n\n//toggle change data form\n  toggleForm() {\n    let form = document.getElementsByClassName('changeDataForm')[0];\n    let toggleButton = document.getElementById('toggleButton');\n    form.classList.toggle('show-form');\n    if (form.classList.contains('show-form')) {\n      toggleButton.innerHTML= 'CHANGE DATA &uarr;';\n    } else {\n      toggleButton.innerHTML = 'CHANGE DATA &darr;';\n    }\n  }\n\n  render() {\n    const {userData, username, email, birthday, favoriteMovies} = this.state;\n\n    if (!userData) return null;\n\n    return (\n      <div className=\"profile-view\">\n      <h1>Your Profile Data</h1>\n        <div className=\"username\">\n          <div className=\"label\">Name:</div>\n          <div className=\"value\">{username}</div>\n        </div>\n        <div className=\"password\">\n          <div className=\"label\">Password:</div>\n          <div className=\"value\">***********</div>\n        </div>\n        <div className=\"birthday\">\n          <div className=\"label\">Birthday:</div>\n          <div className=\"value\">{birthday.substr(-24, 10)}</div>\n        </div>\n        <div className=\"email\">\n          <div className=\"label\">Email:</div>\n          <div className=\"value\">{email}</div>\n        </div>\n        <div className=\"favoriteMovies\">\n          <div className=\"label\">Favorite Movies:</div>\n            {\n              favoriteMovies.length === 0 &&\n              <div className=\"value\">Your Favorite Movie List is empty.\n              </div>\n            }\n            {\n              favoriteMovies.length > 0 &&\n              <div className=\"value favorite-movies\">{favoriteMovies.map(favoriteMovie =>\n                (<div className=\"movie-image\" key={favoriteMovie}>\n                <img className=\"movie-poster\" src={JSON.parse(localStorage.getItem('movies')).find(movie =>\n                  movie._id === favoriteMovie).ImagePath} alt=\"Movie Cover\"/><span onClick={(event) =>\n                     this.deleteMovie(event, favoriteMovie)}> Delete</span></div>))}</div>\n            }\n                </div>\n        <Link to={'/'}>\n          <Button className=\"view-btn\" variant=\"dark\" type=\"button\">\n          Go Back\n          </Button>\n        </Link>\n        <Button className=\"view-btn\" variant=\"dark\" type=\"button\" onClick={(event) => this.deleteUser(event)}>\n        Deregister Account\n        </Button>\n        <Button id=\"toggleButton\" variant=\"dark\" type=\"button\" onClick={() => this.toggleForm()}>\n        CHANGE DATA &darr;\n        </Button>\n\n        <Form className=\"changeDataForm\">\n          <h2>Change Data</h2>\n          <Form.Group controlId=\"formBasicUsername\">\n            <Form.Label >Your Username</Form.Label>\n            <Form.Control type=\"text\" name=\"usernameForm\" onChange={event => this.handleChange(event)} placeholder=\"Enter Username\" />\n            <Form.Text className=\"text-muted\">\n            Type your username here.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Your Password</Form.Label>\n            <Form.Control type=\"password\" name=\"passwordForm\" onChange={event => this.handleChange(event)} placeholder=\"Enter Password\" />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Your Email</Form.Label>\n            <Form.Control type=\"email\" name=\"emailForm\" onChange={event => this.handleChange(event)} placeholder=\"example@ema.il\" />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicBirthday\">\n            <Form.Label>Your Birthday</Form.Label>\n            <Form.Control type=\"date\" placeholder=\"01.01.2000\" name=\"birthdayForm\" onChange={event => this.handleChange(event)} />\n          </Form.Group>\n\n          <Button variant=\"dark\" type=\"button\" onClick={event => this.handleSubmit(event)} >\n          CHANGE!\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\n// ProfileView.propTypes = {\n//   movie: PropTypes.shape({\n//     Title: PropTypes.string,\n//     Description: PropTypes.string,\n//     ImagePath: PropTypes.string,\n//     Genre: PropTypes.shape({\n//       Name: PropTypes.string\n//     }),\n//     Director: PropTypes.shape({\n//       Name: PropTypes.string\n//     })\n//   }).isRequired\n// };\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { setMovies, setLoggedInUser } from '../../actions/actions';\r\nimport MoviesList from '../movies-list/movies-list';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nimport { LoginView } from '../login-view/login-view';\r\nimport { RegistrationView } from '../registration-view/registration-view';\r\nimport  MovieView  from '../movie-view/movie-view';\r\nimport  DirectorView  from '../director-view/director-view';\r\nimport  GenreView  from '../genre-view/genre-view';\r\nimport { ProfileView } from '../profile-view/profile-view';\r\n\r\nimport './main-view.scss';\r\n\r\nexport class MainView extends React.Component {\r\n\r\nconstructor() {\r\n  super();\r\n\r\n  this.state = {\r\n    user: null\r\n  };\r\n}\r\n\r\ncomponentDidMount() {\r\n  let accessToken = localStorage.getItem('token');\r\n  if (accessToken !== null) {\r\n    this.setState({\r\n      user: localStorage.getItem('user')\r\n    });\r\n    this.getMovies(accessToken);\r\n    this.getUser(accessToken);\r\n  }\r\n}\r\n\r\ngetMovies(token) {\r\n  axios.get('https://myflixapp.herokuapp.com/movies', {\r\n    headers: { Authorization: `Bearer ${token}`}\r\n  })\r\n  .then(response => {\r\n  this.props.setMovies(response.data);\r\n  localStorage.setItem('movies', JSON.stringify(response.data));\r\n\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  });\r\n}\r\n\r\n// get user\r\n  getUser(token) {\r\n    let username = localStorage.getItem('user');\r\n    axios.get(`https://myflixapp.herokuapp.com/users/${username}`, {\r\n      headers: { Authorization: `Bearer ${token}`}\r\n    })\r\n    .then(response => {\r\n      this.props.setLoggedInUser(response.data);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  onLoggedIn(authData) {\r\n    console.log(authData.user);\r\n    this.setState({\r\n      user: authData.user.Username\r\n    });\r\n\r\n    this.props.setLoggedInUser(authData.user);\r\n    localStorage.setItem('token', authData.token);\r\n    localStorage.setItem('user', authData.user.Username);\r\n    this.getMovies(authData.token);\r\n  }\r\n\r\n\r\n   UserRegistered(user) {\r\n    this.setState({\r\n      user: user\r\n    });\r\n  }\r\n\r\n  //logut function for LogOut button\r\n    logOut() {\r\n      //clears storage\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('movies');\r\n\r\n      //resets user state to render again\r\n      this.setState({\r\n        user: null\r\n      });\r\n\r\n      //make sure login screen appears after logging out\r\n      window.open('/', '_self');\r\n    }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const { user } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <Container className=\"main-view\">\r\n          <Button type=\"button\" className=\"btn btn-light btn-sm\" onClick={() => this.logOut()}>Log out</Button>\r\n          <Link to={'/profile'}>\r\n              <Button type=\"button\" className=\"btn btn-light btn-sm\">My Profile</Button>\r\n              </Link>\r\n\r\n            <Route exact path=\"/\" render={() => {\r\n                if (!user) return <LoginView onLoggedIn={user => this.onLoggedIn(user)} />;\r\n                return <MoviesList />;\r\n                }}\r\n              />\r\n\r\n            <Route exact path=\"/movies/:id\" render={({ match }) =>\r\n            <MovieView movieId={match.params.id}/>}/>\r\n\r\n\r\n            <Route exact path=\"/genres/:name\" render={({ match }) => <GenreView genreName={match.params.name}/>}/>\r\n\r\n            <Route exact path=\"/directors/:name\" render={({ match }) => <DirectorView directorName={match.params.name}/>}/>\r\n\r\n\r\n            <Route exact path=\"/register\" render={() =>\r\n              <RegistrationView UserRegistered={user => this.UserRegistered(user)} />} />\r\n\r\n            <Route exact path=\"/profile\" render={() => <ProfileView />}/>\r\n\r\n\r\n          </Container>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setMovies, setLoggedInUser } )(MainView);\r\n","import React, { Component } from 'react';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport moviesApp from './reducers/reducers';\nimport MainView from './components/main-view/main-view';\n\nimport './App.css';\n\nconst store = createStore(moviesApp);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MainView />\n      </Provider>    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}